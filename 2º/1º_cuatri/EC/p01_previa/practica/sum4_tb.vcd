$date
	Mon Sep 30 09:08:25 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module sum4_tb $end
$var wire 1 ! test_C_out $end
$var wire 1 " test_c_out $end
$var wire 4 # test_S [3:0] $end
$var reg 4 $ test_A [3:0] $end
$var reg 4 % test_B [3:0] $end
$var reg 1 & test_c_in $end
$scope module sum $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 1 & c_in $end
$var wire 1 " c_out $end
$var wire 4 ) S [3:0] $end
$var wire 1 * C3 $end
$var wire 1 + C2 $end
$var wire 1 , C1 $end
$scope module far1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 & c_in $end
$var wire 1 , c_out $end
$var wire 1 / sum1 $end
$var wire 1 0 sum $end
$var wire 1 1 carry2 $end
$var wire 1 2 carry1 $end
$scope module har1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 2 carry $end
$var wire 1 / sum $end
$upscope $end
$scope module har2 $end
$var wire 1 & a $end
$var wire 1 / b $end
$var wire 1 1 carry $end
$var wire 1 0 sum $end
$upscope $end
$upscope $end
$scope module far2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 , c_in $end
$var wire 1 + c_out $end
$var wire 1 5 sum1 $end
$var wire 1 6 sum $end
$var wire 1 7 carry2 $end
$var wire 1 8 carry1 $end
$scope module har1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 8 carry $end
$var wire 1 5 sum $end
$upscope $end
$scope module har2 $end
$var wire 1 , a $end
$var wire 1 5 b $end
$var wire 1 7 carry $end
$var wire 1 6 sum $end
$upscope $end
$upscope $end
$scope module far3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 + c_in $end
$var wire 1 * c_out $end
$var wire 1 ; sum1 $end
$var wire 1 < sum $end
$var wire 1 = carry2 $end
$var wire 1 > carry1 $end
$scope module har1 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 > carry $end
$var wire 1 ; sum $end
$upscope $end
$scope module har2 $end
$var wire 1 + a $end
$var wire 1 ; b $end
$var wire 1 = carry $end
$var wire 1 < sum $end
$upscope $end
$upscope $end
$scope module far4 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 * c_in $end
$var wire 1 " c_out $end
$var wire 1 A sum1 $end
$var wire 1 B sum $end
$var wire 1 C carry2 $end
$var wire 1 D carry1 $end
$scope module har1 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 D carry $end
$var wire 1 A sum $end
$upscope $end
$scope module har2 $end
$var wire 1 * a $end
$var wire 1 A b $end
$var wire 1 C carry $end
$var wire 1 B sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xD
xC
xB
xA
0@
0?
x>
x=
x<
x;
0:
09
x8
x7
x6
x5
04
03
x2
x1
x0
x/
0.
0-
x,
x+
x*
bx )
b0 (
b0 '
1&
b0 %
b0 $
bx #
x"
z!
$end
#100
0/
02
05
08
0;
0>
0A
0D
#200
0,
0+
0*
0"
bx1 #
bx1 )
10
01
07
0=
0C
#300
06
0<
b1 #
b1 )
0B
#2000
1.
1-
13
19
1?
b1 %
b1 (
b1111 $
b1111 '
0&
#2100
1,
12
15
1;
1A
b0 #
b0 )
00
#2200
1+
17
1<
b1100 #
b1100 )
1B
#2300
1*
b1000 #
b1000 )
0<
1=
#2400
1"
b0 #
b0 )
0B
1C
#4000
14
1:
1@
b1111 %
b1111 (
1&
#4100
05
18
0;
1>
0A
1D
b1 #
b1 )
10
#4200
16
07
1<
0=
b1111 #
b1111 )
1B
0C
#6000
0-
03
09
0?
b0 $
b0 '
#6100
0,
0+
0*
0"
1/
02
15
08
1;
0>
1A
0D
#6200
1,
b1110 #
b1110 )
00
11
#6300
1+
b1100 #
b1100 )
06
17
#6400
1*
b1000 #
b1000 )
0<
1=
#6500
1"
b0 #
b0 )
0B
1C
#8000
0.
0:
1-
19
b1010 %
b1010 (
b101 $
b101 '
0&
#8100
0,
b1 #
b1 )
10
01
#8200
0+
b11 #
b11 )
16
07
#8300
0*
b111 #
b111 )
1<
0=
#8400
0"
b1111 #
b1111 )
1B
0C
#10000
